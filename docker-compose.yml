version: "3"

services:
  web:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db --settings=config.settings.development &&
             python manage.py migrate --settings=config.settings.development &&
             python manage.py runserver 0.0.0.0:8000 --settings=config.settings.development"
    depends_on:
      - db
      - redis
      - broker
      - minio
    restart: on-failure
  worker:
    build:
      context: .
    volumes:
      - ./app:/app
    command: >
      celery -A config  worker -l info
    depends_on:
      - broker
      - redis
      - db
    restart: on-failure
  db:
    image: postgres:13.3-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=afridio
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123882
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: on-failure
    volumes:
      - /Users/belendia/.postgres:/var/lib/postgresql/data
  # Redis
  redis:
    image: redis:6.0.8-alpine
    restart: on-failure
  # RabbitMQ
  broker:
    image: rabbitmq:3.8.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
      - "5671:5671"
#  # MinIO
  minio:
    image: minio/minio
    command: server /data
    environment:
      - MINIO_STORAGE_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    restart: on-failure
    ports:
      - "9000:9000"
    volumes:
      - /Users/belendia/minio:/data

